@using MvcGrid.Models

@{
    ViewBag.Title = "Code Generator";
}


@model ViewBuilderIndexModel

<style>
    .gen-buttons input{width:130px;}
</style>

<h2>Index</h2>

<form id="formFields">
    <div class="row" style="overflow:visible;">
        <div class="col">
            <div class="row">
                <div class="col ">
                    <span class="label" style="width:120px;">Category Name:</span>
                    <div class="" style="width:310px; position:relative; display:inline-block ">
                        <input id="txtCategoryName" type="text" name="CategoryName" class="textbox" style="width:280px;" /><span id="iconShowCtgs" class="icon">&there4;</span>
                        <div id="divCtgs" class="list" style="display:none;">
                            @foreach (string ctg in Model.Categories)
                            {
                                <div>@ctg</div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col ">
                    <span class="label" style="width:60px;">Label:</span>
                    <input id="txtFieldLabel" type="text" name="FieldLabel" class="textbox" style="width:100px;" />
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <span class="label" style="width:120px;">Table Name:</span>
                    <input type="text" name="TableName" class="textbox" style="width:100px;" />
                </div>

                <div class="col">
                    <span class="label" style="width:90px;">Field Name:</span>
                    <input type="text" name="FieldName" class="textbox" style="width:100px;" />
                </div>
            </div>

        </div>

        <div class="col gen-buttons">
            <div class="row">
                <input id="btnSearchField" type="button" class="button" value="Search Fields" />
                <input id="btnGenerateCode" type="button" class="button" value="Generate View" />
                <input id="btnGenerateEntity" type="button" class="button" value="Generate Entity" />
                <input id="btnGenerateSql" type="button" class="button" value="Generate SQL" />
            </div>

            <div class="row">
                <input id="btnGenerateKIML" type="button" class="button" value="Generate KIML" />
                <input id="btnGenerateHTML" type="button" class="button" value="Generate HTML" />
                <input id="btnGenerateMVC" type="button" class="button" value="Generate MVC View" />
            </div>

        </div>
    </div>
    <div style="clear:both;"></div>
    <div id="divFields">
        @Html.Action("SearchFields", "ViewBuilder")
    </div>

    <div id="divCodes" style="padding-top:10px;">
        <div>Codes:</div>
        <pre>
<textarea id="txtCodes" style="width:1100px; height:220px;"></textarea>
        </pre>
    </div>
</form>

<script>
    $(function () {
        $.ajaxSetup({
            cache: false
        });

        //Search Fields
        $("#btnSearchField").click(function () {
            $("#divFields").html("Searching...");
            var url = "@Url.Content("~/ViewBuilder/SearchFields")";
            var args = $("#formFields").serialize();
            $.post(url, args, function (data) {
                $("#divFields").html(data);
            })
        })

        //Generate View
        $("#btnGenerateCode").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate")";
            generate(url);
        })

        //Generate Entity
        $("#btnGenerateEntity").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate")" + "?type=Entity";
            generate(url);
        })

        //Generate KIML
        $("#btnGenerateKIML").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate?type=Kiml")";
            generate(url);
        })

        //Generate Html
        $("#btnGenerateHTML").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate?type=Html")";
            generate(url);
        })

        //Generate Mvc
        $("#btnGenerateMVC").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate?type=Mvc")";
            generate(url);
        })

        //Generate SQL
        $("#btnGenerateSql").click(function () {
            var url = "@Url.Content("~/ViewBuilder/Generate?type=sql")";
            generate(url);
        })

        $("#divCtgs div").click(function (event) {
            $("#txtCategoryName").val($(this).html());
            $("#divCtgs").toggle();
        });

        $("#iconShowCtgs").click(function () {
            $("#divCtgs").toggle();

            window.CategoryHandled = true;
            event.stopPropagation();
            return false;
        })

        $("body").click(function () {
            if (window.CategoryHandled == true) {
                window.CategoryHandled = false;
                return;
            }
            $("#divCtgs").hide();
        });

    })

    function generate(url) {
        $("#txtCodes").html("Generating...");
        var args = $("#formFields").serialize();
        $.post(url, args, function (data) {
            if (data == "")
                data = "No matched fields, maybe fields's control type ID is empty.";
            $("#txtCodes").html(data);
        })
    }

    function duplicateField(fieldId) {
        var url = "@Url.Content("~/ViewBuilder/DuplicateField")";
        $.post(url, { fieldId: fieldId }, function (data) {
            if(data != "")
                alert(data)
            else {
                $("#btnSearchField").click();
            }
        })
        return false;
    }
</script>
